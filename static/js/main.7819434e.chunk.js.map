{"version":3,"sources":["FeedbackOptions/FeedbackOptions.module.css","Statistics/Statistics.module.css","Section/Section.module.css","Notification/Notification.module.css","FeedbackOptions/FeedbackOptions.js","Statistics/Statistics.js","Section/Section.js","Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","stateKeysArr","className","styles","list","map","feedback","listItem","button","onClick","Statistics","allFeedbacksObj","total","positivePercentage","Section","title","children","sectionTitle","Notification","message","notification","useStateFeedbacks","key","useState","App","good","setGood","neutral","setNeutral","bad","setBad","feedbacksObj","Object","keys","feedbacksCount","reduce","acc","Math","round","evt","target","textContent","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,SAAW,kCAAkC,OAAS,kC,gBCA7GD,EAAOC,QAAU,CAAC,SAAW,+B,kBCA7BD,EAAOC,QAAU,CAAC,aAAe,gC,gBCAjCD,EAAOC,QAAU,CAAC,aAAe,qC,+JCyBlBC,EAvBS,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,aAC1C,OACE,oBAAIC,UAAWC,IAAOC,KAAtB,SACGH,EAAaI,KAAI,SAACC,GAAD,OAChB,oBAAmBJ,UAAWC,IAAOI,SAArC,SACE,wBACEL,UAAWC,IAAOK,OAElBC,QAAST,EAHX,SAKGM,KANIA,S,gBCyBFI,EA7BI,SAAC,GAKb,IAJLC,EAII,EAJJA,gBACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,mBACAZ,EACI,EADJA,aAEA,OACE,+BACGA,EAAaI,KAAI,SAACC,GAAD,OAChB,oBAAmBJ,UAAWC,IAAOI,SAArC,SACE,iCACGD,EADH,IACcK,EAAgBL,OAFvBA,MAMX,qBAAIJ,UAAWC,IAAOI,SAAtB,mBAAuCK,KACvC,qBAAIV,UAAWC,IAAOI,SAAtB,gCACsBM,EADtB,W,gBCHSC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAId,UAAWC,IAAOc,aAAtB,SAAqCF,IACpCC,M,gBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGjB,UAAWC,IAAOiB,aAArB,SAAoCD,KCGvCE,EAAoB,SAACC,GACzB,MAA0BC,mBAAS,GAAnC,mBAEA,MAAO,CAFP,YA6DaC,EAxDH,WACV,MAAwBH,IAAxB,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAA8BL,IAA9B,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAsBP,IAAtB,mBAAOQ,EAAP,KAAYC,EAAZ,KAEMC,EAAe,CAAEN,OAAME,UAASE,OAChC5B,EAAe+B,OAAOC,KAAKF,GAC3BG,EAAiBjC,EAAakC,QAClC,SAACC,EAAK9B,GAAN,OAAmB8B,EAAML,EAAazB,KACtC,GAEIO,EAAqBwB,KAAKC,MAAOb,EAAOS,EAAkB,KAqBhE,OACE,qCACE,cAAC,EAAD,CAASnB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEf,gBAvBmB,SAACuC,GAE1B,OADcA,EAAIC,OAAOC,aAEvB,IAAK,OACHf,GAAQ,SAACgB,GAAD,OAAUA,EAAO,KACzB,MAEF,IAAK,UACHd,GAAW,SAACc,GAAD,OAAUA,EAAO,KAC5B,MAEF,IAAK,MACHZ,GAAO,SAACY,GAAD,OAAUA,EAAO,KACxB,MAEF,QACE,SAQEzC,aAAcA,MAIlB,cAAC,EAAD,CAASc,MAAM,aAAf,SACImB,EAGA,cAAC,EAAD,CACEvB,gBAAiBoB,EACjBnB,MAAOsB,EACPrB,mBAAoBA,EACpBZ,aAAcA,IANhB,cAAC,EAAD,CAAckB,QAAQ,4BClDhCwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7819434e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__c3cui\",\"listItem\":\"FeedbackOptions_listItem__1HGzn\",\"button\":\"FeedbackOptions_button__2y29m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Statistics_listItem__1sWTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__33b43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3BQX3\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, stateKeysArr }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {stateKeysArr.map((feedback) => (\r\n        <li key={feedback} className={styles.listItem}>\r\n          <button\r\n            className={styles.button}\r\n            // onClick={() => onLeaveFeedback(feedback)}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {feedback}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  stateKeysArr: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n// _______________________________\r\n\r\n// const FeedbackOptions = ({ onLeaveFeedback, stateKeysArr }) => {\r\n//   return (\r\n//     <ul className={styles.list}>\r\n//       {stateKeysArr.map((feedback) => (\r\n//         <li key={feedback} className={styles.listItem}>\r\n//           <button\r\n//             className={styles.button}\r\n//             onClick={() => onLeaveFeedback(feedback)}\r\n//           >\r\n//             {feedback}\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// FeedbackOptions.propTypes = {\r\n//   onLeaveFeedback: PropTypes.func.isRequired,\r\n//   stateKeysArr: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n// };\r\n\r\n// export default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({\r\n  allFeedbacksObj,\r\n  total,\r\n  positivePercentage,\r\n  stateKeysArr,\r\n}) => {\r\n  return (\r\n    <ul>\r\n      {stateKeysArr.map((feedback) => (\r\n        <li key={feedback} className={styles.listItem}>\r\n          <span>\r\n            {feedback}:{allFeedbacksObj[feedback]}\r\n          </span>\r\n        </li>\r\n      ))}\r\n      <li className={styles.listItem}>Total:{total}</li>\r\n      <li className={styles.listItem}>\r\n        Positive feedback: {positivePercentage}%\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  allFeedbacksObj: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  stateKeysArr: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n};\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className={styles.sectionTitle}>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={styles.notification}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\n\nconst useStateFeedbacks = (key) => {\n  const [state, setState] = useState(0);\n\n  return [state, setState];\n};\n\nconst App = () => {\n  const [good, setGood] = useStateFeedbacks(\"good\");\n  const [neutral, setNeutral] = useStateFeedbacks(\"neutral\");\n  const [bad, setBad] = useStateFeedbacks(\"bad\");\n\n  const feedbacksObj = { good, neutral, bad };\n  const stateKeysArr = Object.keys(feedbacksObj);\n  const feedbacksCount = stateKeysArr.reduce(\n    (acc, feedback) => acc + feedbacksObj[feedback],\n    0\n  );\n  const positivePercentage = Math.round((good / feedbacksCount) * 100);\n\n  const setFeedbackToState = (evt) => {\n    const value = evt.target.textContent;\n    switch (value) {\n      case \"good\":\n        setGood((prev) => prev + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((prev) => prev + 1);\n        break;\n\n      case \"bad\":\n        setBad((prev) => prev + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          onLeaveFeedback={setFeedbackToState}\n          stateKeysArr={stateKeysArr}\n        ></FeedbackOptions>\n      </Section>\n\n      <Section title=\"Statistics\">\n        {!feedbacksCount ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            allFeedbacksObj={feedbacksObj}\n            total={feedbacksCount}\n            positivePercentage={positivePercentage}\n            stateKeysArr={stateKeysArr}\n          />\n        )}\n      </Section>\n    </>\n  );\n};\nexport default App;\n// ________________________________\n\n// const useStateFeedbacks = (key) => {\n//   const [state, setState] = useState(0);\n\n//   return [state, setState];\n// };\n\n// const App = () => {\n//   const [state, setState] = useState({ good: 0, neutral: 0, bad: 0 });\n\n//   const stateKeysArr = Object.keys(state);\n//   const feedbacksCount = stateKeysArr.reduce(\n//     (acc, feedback) => acc + state[feedback],\n//     0\n//   );\n//   const positivePercentage = Math.round((state.good / feedbacksCount) * 100);\n\n//   const setFeedbackToState = (feedback) => {\n//     setState((prevState) => {\n//       return { ...prevState, [feedback]: prevState[feedback] + 1 };\n//     });\n//   };\n\n//   return (\n//     <>\n//       <Section title=\"Please leave feedback\">\n//         <FeedbackOptions\n//           onLeaveFeedback={setFeedbackToState}\n//           stateKeysArr={stateKeysArr}\n//         ></FeedbackOptions>\n//       </Section>\n\n//       <Section title=\"Statistics\">\n//         {!feedbacksCount ? <Notification message=\"No feedback given\" />:<Statistics\n//             allFeedbacksObj={state}\n//             total={feedbacksCount}\n//             positivePercentage={positivePercentage}\n//             stateKeysArr={stateKeysArr}\n//           />}\n//       </Section>\n//     </>\n//   );\n// };\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}